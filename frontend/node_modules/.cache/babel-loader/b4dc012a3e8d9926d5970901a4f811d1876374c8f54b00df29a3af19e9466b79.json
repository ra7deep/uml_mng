{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajdeep\\\\Desktop\\\\project\\\\client\\\\src\\\\pages\\\\Assets.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../css/Assets.css';\nimport TopNav from '../pages/TopNav'; // Assuming TopNav.jsx is correctly imported\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ConfirmModal({\n  isOpen,\n  onCancel,\n  onConfirm\n}) {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: onCancel,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Confirm Deletion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete this item?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onConfirm,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = ConfirmModal;\nfunction Assets() {\n  _s();\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [showFullTable, setShowFullTable] = useState(false);\n  const [searchInput, setSearchInput] = useState('');\n  const [editingItemId, setEditingItemId] = useState(null);\n  const [editFormData, setEditFormData] = useState({});\n  const [confirmDeleteItemId, setConfirmDeleteItemId] = useState(null);\n  useEffect(() => {\n    fetchData(); // Fetch data on component mount\n  }, []); // Empty dependency array ensures this effect runs only once\n\n  useEffect(() => {\n    showCurrentPage(); // Update table display on pagination or item per page change\n  }, [currentPage, itemsPerPage]); // Run whenever currentPage or itemsPerPage changes\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/admin/genReport');\n      const data = await response.json();\n      setData(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const changeItemsPerPage = event => {\n    setItemsPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1); // Reset to first page when items per page changes\n  };\n  const nextPage = () => {\n    if ((currentPage + 1) * itemsPerPage <= data.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const showCurrentPage = () => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const tableRows = document.getElementById(\"employeeTable\").querySelectorAll(\"tbody tr\");\n    tableRows.forEach((row, index) => {\n      if (index >= startIndex && index < endIndex) {\n        row.style.display = \"\";\n      } else {\n        row.style.display = \"none\";\n      }\n    });\n\n    // Update pagination buttons\n    document.getElementById(\"prevPageBtn\").disabled = currentPage === 1;\n    document.getElementById(\"nextPageBtn\").disabled = (currentPage + 1) * itemsPerPage > tableRows.length;\n  };\n  const openForm = () => {\n    document.getElementById(\"addDataForm\").style.display = \"block\";\n  };\n  const closeForm = () => {\n    document.getElementById(\"addDataForm\").style.display = \"none\";\n  };\n  const openFieldForm = () => {\n    document.getElementById(\"addFieldForm\").style.display = \"block\";\n  };\n  const closeFieldForm = () => {\n    document.getElementById(\"addFieldForm\").style.display = \"none\";\n  };\n  const toggleColumns = () => {\n    setShowFullTable(!showFullTable);\n    const extraColumns = document.querySelectorAll(\".extra-column\");\n    extraColumns.forEach(column => {\n      column.style.display = showFullTable ? \"table-cell\" : \"none\";\n    });\n  };\n  const searchTable = () => {\n    const filter = searchInput.toUpperCase();\n    const table = document.getElementById(\"employeeTable\");\n    const tr = table.getElementsByTagName(\"tr\");\n    for (let i = 1; i < tr.length; i++) {\n      // Start from 1 to skip table headers\n      let display = \"none\";\n      const td = tr[i].getElementsByTagName(\"td\");\n      for (let j = 0; j < td.length; j++) {\n        const txtValue = td[j].textContent || td[j].innerText;\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n          display = \"\";\n          break;\n        }\n      }\n      tr[i].style.display = display;\n    }\n  };\n  const handleEdit = item => {\n    setEditingItemId(item._id);\n    setEditFormData(item); // Populate edit form data with the current item's data\n  };\n  const handleEditInputChange = e => {\n    setEditFormData({\n      ...editFormData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleEditSubmit = async () => {\n    try {\n      const response = await fetch(`/edit_asset/${editingItemId}`, {\n        method: 'PUT',\n        // Assuming PUT method for editing\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editFormData)\n      });\n      if (response.ok) {\n        // Update data locally after successful edit\n        const updatedData = data.map(item => item._id === editingItemId ? editFormData : item);\n        setData(updatedData);\n        setEditingItemId(null); // Clear editing state\n        setEditFormData({}); // Clear edit form data\n      } else {\n        console.error('Failed to update item');\n      }\n    } catch (error) {\n      console.error('Error updating item:', error);\n    }\n  };\n  const handleDelete = async () => {\n    try {\n      const response = await fetch(`/delete_asset/${confirmDeleteItemId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        const updatedData = data.filter(item => item._id !== confirmDeleteItemId);\n        setData(updatedData);\n        setConfirmDeleteItemId(null); // Clear confirmation state\n      } else {\n        console.error('Failed to delete item');\n      }\n    } catch (error) {\n      console.error('Error deleting item:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-page\",\n    children: [/*#__PURE__*/_jsxDEV(TopNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content gen-report-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items-per-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"itemsPerPage\",\n            children: \"Items per page:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"itemsPerPage\",\n            onChange: changeItemsPerPage,\n            value: itemsPerPage,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"20\",\n              children: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"50\",\n              children: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"100\",\n              children: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"searchInput\",\n          value: searchInput,\n          onChange: e => setSearchInput(e.target.value),\n          onKeyUp: searchTable,\n          placeholder: \"Search for names..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addDataBtn\",\n          onClick: openForm,\n          children: \"Add Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addFieldBtn\",\n          onClick: openFieldForm,\n          children: \"Add Field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toggleColumnsBtn\",\n          onClick: toggleColumns,\n          children: showFullTable ? \"Show Limited Table\" : \"Show Full Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"addDataForm\",\n          className: \"modal\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: closeForm,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Add New Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"dataForm\",\n              children: [data.length > 0 && Object.keys(data[0]).map(key => key !== '_id' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: key,\n                  children: [key, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: key,\n                  name: key,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 75\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"addFieldForm\",\n          className: \"modal\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: closeFieldForm,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Add New Field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"fieldForm\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"fieldName\",\n                children: \"Field name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"fieldName\",\n                name: \"fieldName\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 79\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"fieldType\",\n                children: \"Field type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"fieldType\",\n                name: \"fieldType\",\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"String\",\n                  children: \"String\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Number\",\n                  children: \"Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Boolean\",\n                  children: \"Boolean\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmModal, {\n          isOpen: confirmDeleteItemId !== null,\n          onCancel: () => setConfirmDeleteItemId(null),\n          onConfirm: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"employeeTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [data.length > 0 && Object.keys(data[0]).map((key, index) => key !== '_id' && /*#__PURE__*/_jsxDEV(\"th\", {\n                className: index > 8 ? 'extra-column' : '',\n                children: key\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"extra-column\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [Object.keys(item).map((key, index) => key !== '_id' && /*#__PURE__*/_jsxDEV(\"td\", {\n                className: index > 8 ? 'extra-column' : '',\n                children: editingItemId === item._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: key,\n                  value: editFormData[key] || item[key],\n                  onChange: handleEditInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 27\n                }, this) : item[key]\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"extra-column\",\n                children: editingItemId === item._id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleEditSubmit,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleEdit(item),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: `/delete_asset/${item._id}`,\n                    className: \"delete-link\",\n                    onClick: e => {\n                      e.preventDefault(); // Prevent default link behavior\n                      setConfirmDeleteItemId(item._id); // Set item ID for deletion confirmation\n                    },\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"prevPageBtn\",\n            onClick: prevPage,\n            children: \"Previous Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"nextPageBtn\",\n            onClick: nextPage,\n            children: \"Next Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(Assets, \"sTYueHted8he5xSDTiH3TjOuHWw=\");\n_c2 = Assets;\nexport default Assets;\nvar _c, _c2;\n$RefreshReg$(_c, \"ConfirmModal\");\n$RefreshReg$(_c2, \"Assets\");","map":{"version":3,"names":["React","useState","useEffect","TopNav","jsxDEV","_jsxDEV","Fragment","_Fragment","ConfirmModal","isOpen","onCancel","onConfirm","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Assets","_s","data","setData","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","showFullTable","setShowFullTable","searchInput","setSearchInput","editingItemId","setEditingItemId","editFormData","setEditFormData","confirmDeleteItemId","setConfirmDeleteItemId","fetchData","showCurrentPage","response","fetch","json","error","console","changeItemsPerPage","event","parseInt","target","value","nextPage","length","prevPage","startIndex","endIndex","tableRows","document","getElementById","querySelectorAll","forEach","row","index","style","display","disabled","openForm","closeForm","openFieldForm","closeFieldForm","toggleColumns","extraColumns","column","searchTable","filter","toUpperCase","table","tr","getElementsByTagName","i","td","j","txtValue","textContent","innerText","indexOf","handleEdit","item","_id","handleEditInputChange","e","name","handleEditSubmit","method","headers","body","JSON","stringify","ok","updatedData","map","handleDelete","htmlFor","id","onChange","type","onKeyUp","placeholder","Object","keys","key","required","href","preventDefault","_c2","$RefreshReg$"],"sources":["C:/Users/Rajdeep/Desktop/project/client/src/pages/Assets.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../css/Assets.css';\r\nimport TopNav from '../pages/TopNav'; // Assuming TopNav.jsx is correctly imported\r\n\r\nfunction ConfirmModal({ isOpen, onCancel, onConfirm }) {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <span className=\"close\" onClick={onCancel}>&times;</span>\r\n        <h2>Confirm Deletion</h2>\r\n        <p>Are you sure you want to delete this item?</p>\r\n        <button onClick={onConfirm}>Delete</button>\r\n        <button onClick={onCancel}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Assets() {\r\n  const [data, setData] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [showFullTable, setShowFullTable] = useState(false);\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [editingItemId, setEditingItemId] = useState(null);\r\n  const [editFormData, setEditFormData] = useState({});\r\n  const [confirmDeleteItemId, setConfirmDeleteItemId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData(); // Fetch data on component mount\r\n  }, []); // Empty dependency array ensures this effect runs only once\r\n\r\n  useEffect(() => {\r\n    showCurrentPage(); // Update table display on pagination or item per page change\r\n  }, [currentPage, itemsPerPage]); // Run whenever currentPage or itemsPerPage changes\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/admin/genReport');\r\n      const data = await response.json();\r\n      setData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  const changeItemsPerPage = (event) => {\r\n    setItemsPerPage(parseInt(event.target.value, 10));\r\n    setCurrentPage(1); // Reset to first page when items per page changes\r\n  };\r\n\r\n  const nextPage = () => {\r\n    if ((currentPage + 1) * itemsPerPage <= data.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const showCurrentPage = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    const tableRows = document.getElementById(\"employeeTable\").querySelectorAll(\"tbody tr\");\r\n\r\n    tableRows.forEach((row, index) => {\r\n      if (index >= startIndex && index < endIndex) {\r\n        row.style.display = \"\";\r\n      } else {\r\n        row.style.display = \"none\";\r\n      }\r\n    });\r\n\r\n    // Update pagination buttons\r\n    document.getElementById(\"prevPageBtn\").disabled = (currentPage === 1);\r\n    document.getElementById(\"nextPageBtn\").disabled = ((currentPage + 1) * itemsPerPage > tableRows.length);\r\n  };\r\n\r\n  const openForm = () => {\r\n    document.getElementById(\"addDataForm\").style.display = \"block\";\r\n  };\r\n\r\n  const closeForm = () => {\r\n    document.getElementById(\"addDataForm\").style.display = \"none\";\r\n  };\r\n\r\n  const openFieldForm = () => {\r\n    document.getElementById(\"addFieldForm\").style.display = \"block\";\r\n  };\r\n\r\n  const closeFieldForm = () => {\r\n    document.getElementById(\"addFieldForm\").style.display = \"none\";\r\n  };\r\n\r\n  const toggleColumns = () => {\r\n    setShowFullTable(!showFullTable);\r\n    const extraColumns = document.querySelectorAll(\".extra-column\");\r\n\r\n    extraColumns.forEach(column => {\r\n      column.style.display = showFullTable ? \"table-cell\" : \"none\";\r\n    });\r\n  };\r\n\r\n  const searchTable = () => {\r\n    const filter = searchInput.toUpperCase();\r\n    const table = document.getElementById(\"employeeTable\");\r\n    const tr = table.getElementsByTagName(\"tr\");\r\n\r\n    for (let i = 1; i < tr.length; i++) { // Start from 1 to skip table headers\r\n      let display = \"none\";\r\n      const td = tr[i].getElementsByTagName(\"td\");\r\n      for (let j = 0; j < td.length; j++) {\r\n        const txtValue = td[j].textContent || td[j].innerText;\r\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n          display = \"\";\r\n          break;\r\n        }\r\n      }\r\n      tr[i].style.display = display;\r\n    }\r\n  };\r\n\r\n  const handleEdit = (item) => {\r\n    setEditingItemId(item._id);\r\n    setEditFormData(item); // Populate edit form data with the current item's data\r\n  };\r\n\r\n  const handleEditInputChange = (e) => {\r\n    setEditFormData({\r\n      ...editFormData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleEditSubmit = async () => {\r\n    try {\r\n      const response = await fetch(`/edit_asset/${editingItemId}`, {\r\n        method: 'PUT', // Assuming PUT method for editing\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(editFormData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Update data locally after successful edit\r\n        const updatedData = data.map(item => item._id === editingItemId ? editFormData : item);\r\n        setData(updatedData);\r\n        setEditingItemId(null); // Clear editing state\r\n        setEditFormData({}); // Clear edit form data\r\n      } else {\r\n        console.error('Failed to update item');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating item:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const response = await fetch(`/delete_asset/${confirmDeleteItemId}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (response.ok) {\r\n        const updatedData = data.filter(item => item._id !== confirmDeleteItemId);\r\n        setData(updatedData);\r\n        setConfirmDeleteItemId(null); // Clear confirmation state\r\n      } else {\r\n        console.error('Failed to delete item');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting item:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"report-page\">\r\n      <TopNav /> {/* Include TopNav component */}\r\n      <div className=\"content gen-report-content\">\r\n        <div className=\"table-container\">\r\n          <div className=\"items-per-page\">\r\n            <label htmlFor=\"itemsPerPage\">Items per page:</label>\r\n            <select id=\"itemsPerPage\" onChange={changeItemsPerPage} value={itemsPerPage}>\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n          </div>\r\n\r\n          <input\r\n            type=\"text\"\r\n            id=\"searchInput\"\r\n            value={searchInput}\r\n            onChange={(e) => setSearchInput(e.target.value)}\r\n            onKeyUp={searchTable}\r\n            placeholder=\"Search for names..\"\r\n          />\r\n\r\n          <button id=\"addDataBtn\" onClick={openForm}>Add Data</button>\r\n          <button id=\"addFieldBtn\" onClick={openFieldForm}>Add Field</button>\r\n          <button id=\"toggleColumnsBtn\" onClick={toggleColumns}>\r\n            {showFullTable ? \"Show Limited Table\" : \"Show Full Table\"}\r\n          </button>\r\n\r\n          <div id=\"addDataForm\" className=\"modal\">\r\n            <div className=\"modal-content\">\r\n              <span className=\"close\" onClick={closeForm}>&times;</span>\r\n              <h2>Add New Data</h2>\r\n              <form id=\"dataForm\">\r\n                {data.length > 0 &&\r\n                  Object.keys(data[0]).map((key) => (\r\n                    key !== '_id' && (\r\n                      <div key={key}>\r\n                        <label htmlFor={key}>{key}:</label>\r\n                        <input type=\"text\" id={key} name={key} required /><br />\r\n                      </div>\r\n                    )\r\n                  ))}\r\n                <button type=\"submit\">Submit</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"addFieldForm\" className=\"modal\">\r\n            <div className=\"modal-content\">\r\n              <span className=\"close\" onClick={closeFieldForm}>&times;</span>\r\n              <h2>Add New Field</h2>\r\n              <form id=\"fieldForm\">\r\n                <label htmlFor=\"fieldName\">Field name:</label>\r\n                <input type=\"text\" id=\"fieldName\" name=\"fieldName\" required /><br />\r\n                <label htmlFor=\"fieldType\">Field type:</label>\r\n                <select id=\"fieldType\" name=\"fieldType\" required>\r\n                  <option value=\"String\">String</option>\r\n                  <option value=\"Number\">Number</option>\r\n                  <option value=\"Boolean\">Boolean</option>\r\n                </select><br />\r\n                <button type=\"submit\">Submit</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n          <ConfirmModal\r\n            isOpen={confirmDeleteItemId !== null}\r\n            onCancel={() => setConfirmDeleteItemId(null)}\r\n            onConfirm={handleDelete}\r\n          />\r\n\r\n          <table id=\"employeeTable\">\r\n            <thead>\r\n              <tr>\r\n                {data.length > 0 &&\r\n                  Object.keys(data[0]).map((key, index) => (\r\n                    key !== '_id' && (\r\n                      <th key={key} className={index > 8 ? 'extra-column' : ''}>{key}</th>\r\n                    )\r\n                  ))}\r\n                <th className=\"extra-column\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((item) => (\r\n                <tr key={item._id}>\r\n                  {Object.keys(item).map((key, index) => (\r\n                    key !== '_id' && (\r\n                      <td key={key} className={index > 8 ? 'extra-column' : ''}>\r\n                        {editingItemId === item._id ? (\r\n                          <input\r\n                            type=\"text\"\r\n                            name={key}\r\n                            value={editFormData[key] || item[key]}\r\n                            onChange={handleEditInputChange}\r\n                          />\r\n                        ) : (\r\n                          item[key]\r\n                        )}\r\n                      </td>\r\n                    )\r\n                  ))}\r\n                  <td className=\"extra-column\">\r\n                    {editingItemId === item._id ? (\r\n                      <button onClick={handleEditSubmit}>Save</button>\r\n                    ) : (\r\n                      <>\r\n                        <button onClick={() => handleEdit(item)}>Edit</button>\r\n                        <a href={`/delete_asset/${item._id}`} className=\"delete-link\" onClick={(e) => {\r\n                          e.preventDefault(); // Prevent default link behavior\r\n                          setConfirmDeleteItemId(item._id); // Set item ID for deletion confirmation\r\n                        }}>Delete</a>\r\n                      </>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"pagination\">\r\n            <button id=\"prevPageBtn\" onClick={prevPage}>Previous Page</button>\r\n            <button id=\"nextPageBtn\" onClick={nextPage}>Next Page</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Assets;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}