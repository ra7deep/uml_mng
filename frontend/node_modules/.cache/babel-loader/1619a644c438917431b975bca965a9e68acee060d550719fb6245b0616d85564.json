{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajdeep\\\\Desktop\\\\project\\\\client\\\\src\\\\pages\\\\Emplist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../css/Emplist.css';\nimport TopNav from './TopNav'; // Import the TopNav component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Emplist = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [filter, setFilter] = useState('');\n  const [selectedAsset, setSelectedAsset] = useState(null);\n  const [editFormData, setEditFormData] = useState(null); // State to hold the data of the item being edited\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = () => {\n    // Fetch data from server\n    fetch('http://localhost:5000/emplist').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok ' + response.statusText);\n      }\n      return response.json();\n    }).then(data => setData(data)).catch(error => console.error('Error fetching data:', error));\n  };\n  const filteredData = data.filter(item => {\n    return Object.values(item).some(value => value.toString().toLowerCase().includes(filter.toLowerCase()));\n  });\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\n  const changePage = pageNumber => setCurrentPage(pageNumber);\n  const changeItemsPerPage = event => {\n    setItemsPerPage(parseInt(event.target.value));\n    setCurrentPage(1); // Reset to first page when items per page changes\n  };\n  const openModal = id => {\n    console.log('Fetching asset details for ID:', id); // Debug log\n    fetch(`http://localhost:5000/get_asset/${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok ' + response.statusText);\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Asset details fetched:', data); // Debug log\n      setSelectedAsset(data);\n    }).catch(error => console.error('Error fetching asset details:', error));\n  };\n  const closeModal = () => setSelectedAsset(null);\n  const openEditForm = item => {\n    setEditFormData(item);\n    document.getElementById(\"editDataForm\").style.display = \"block\";\n  };\n  const closeEditForm = () => {\n    setEditFormData(null);\n    document.getElementById(\"editDataForm\").style.display = \"none\";\n  };\n  const handleEditSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const updatedItem = {};\n    formData.forEach((value, key) => {\n      if (value) updatedItem[key] = value; // Only update fields with a non-empty value\n    });\n    try {\n      const response = await fetch(`http://localhost:5000/edit_asset/${editFormData._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedItem)\n      });\n      if (response.ok) {\n        closeEditForm();\n        fetchData(); // Refresh data to show the updated item\n      } else {\n        console.error('Failed to update item');\n      }\n    } catch (error) {\n      console.error('Error updating item:', error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/delete_asset/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        const updatedData = data.filter(item => item._id !== id);\n        setData(updatedData);\n      } else {\n        console.error('Failed to delete item');\n      }\n    } catch (error) {\n      console.error('Error deleting item:', error);\n    }\n  };\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(TopNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content gen-report-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items-per-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"itemsPerPage\",\n            children: \"Items per page:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"itemsPerPage\",\n            value: itemsPerPage,\n            onChange: changeItemsPerPage,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"20\",\n              children: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"50\",\n              children: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"100\",\n              children: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"filterInput\",\n            children: \"Filter:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"filterInput\",\n            value: filter,\n            onChange: e => setFilter(e.target.value),\n            placeholder: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"employeeTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [data.length > 0 && Object.keys(data[0]).map(key => key !== '_id' && /*#__PURE__*/_jsxDEV(\"th\", {\n                children: key\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 58\n              }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentItems.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [Object.keys(item).map(key => key !== '_id' && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item[key]\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 58\n              }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit-link\",\n                  onClick: () => openEditForm(item),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-link\",\n                  onClick: () => handleDelete(item._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view-link\",\n                  onClick: () => openModal(item._id),\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"prevPageBtn\",\n            onClick: () => changePage(currentPage - 1),\n            disabled: currentPage === 1,\n            children: \"Previous Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" Page \", currentPage, \" of \", totalPages, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"nextPageBtn\",\n            onClick: () => changePage(currentPage + 1),\n            disabled: currentPage === totalPages,\n            children: \"Next Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), selectedAsset && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"viewModal\",\n      className: \"modal\",\n      style: {\n        display: 'block'\n      },\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-button\",\n          onClick: closeModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Asset Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"assetDetails\",\n          className: \"asset-details\",\n          children: Object.keys(selectedAsset).map(key => key !== '_id' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [key, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 63\n            }, this), \" \", selectedAsset[key]]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 50\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"editDataForm\",\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: closeEditForm,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"editForm\",\n          onSubmit: handleEditSubmit,\n          children: [editFormData && Object.keys(editFormData).map(key => key !== '_id' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: key,\n              children: [key, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: key,\n              name: key,\n              defaultValue: editFormData[key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 41\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 37\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_s(Emplist, \"TDZApIbeym67sU3ShYSZ9v/dLug=\");\n_c = Emplist;\nexport default Emplist;\nvar _c;\n$RefreshReg$(_c, \"Emplist\");","map":{"version":3,"names":["React","useState","useEffect","TopNav","jsxDEV","_jsxDEV","Emplist","_s","data","setData","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","filter","setFilter","selectedAsset","setSelectedAsset","editFormData","setEditFormData","fetchData","fetch","then","response","ok","Error","statusText","json","catch","error","console","filteredData","item","Object","values","some","value","toString","toLowerCase","includes","indexOfLastItem","indexOfFirstItem","currentItems","slice","changePage","pageNumber","changeItemsPerPage","event","parseInt","target","openModal","id","log","closeModal","openEditForm","document","getElementById","style","display","closeEditForm","handleEditSubmit","e","preventDefault","formData","FormData","updatedItem","forEach","key","_id","method","headers","body","JSON","stringify","handleDelete","updatedData","totalPages","Math","ceil","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","type","placeholder","keys","map","onClick","disabled","stopPropagation","onSubmit","name","defaultValue","_c","$RefreshReg$"],"sources":["C:/Users/Rajdeep/Desktop/project/client/src/pages/Emplist.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../css/Emplist.css';\r\nimport TopNav from './TopNav'; // Import the TopNav component\r\n\r\nconst Emplist = () => {\r\n    const [data, setData] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [itemsPerPage, setItemsPerPage] = useState(10);\r\n    const [filter, setFilter] = useState('');\r\n    const [selectedAsset, setSelectedAsset] = useState(null);\r\n    const [editFormData, setEditFormData] = useState(null); // State to hold the data of the item being edited\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = () => {\r\n        // Fetch data from server\r\n        fetch('http://localhost:5000/emplist')\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok ' + response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => setData(data))\r\n            .catch(error => console.error('Error fetching data:', error));\r\n    };\r\n\r\n    const filteredData = data.filter(item => {\r\n        return Object.values(item).some(value =>\r\n            value.toString().toLowerCase().includes(filter.toLowerCase())\r\n        );\r\n    });\r\n\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = filteredData.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    const changePage = (pageNumber) => setCurrentPage(pageNumber);\r\n    const changeItemsPerPage = (event) => {\r\n        setItemsPerPage(parseInt(event.target.value));\r\n        setCurrentPage(1); // Reset to first page when items per page changes\r\n    };\r\n\r\n    const openModal = (id) => {\r\n        console.log('Fetching asset details for ID:', id); // Debug log\r\n        fetch(`http://localhost:5000/get_asset/${id}`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok ' + response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log('Asset details fetched:', data); // Debug log\r\n                setSelectedAsset(data);\r\n            })\r\n            .catch(error => console.error('Error fetching asset details:', error));\r\n    };\r\n\r\n    const closeModal = () => setSelectedAsset(null);\r\n\r\n    const openEditForm = (item) => {\r\n        setEditFormData(item);\r\n        document.getElementById(\"editDataForm\").style.display = \"block\";\r\n    };\r\n\r\n    const closeEditForm = () => {\r\n        setEditFormData(null);\r\n        document.getElementById(\"editDataForm\").style.display = \"none\";\r\n    };\r\n\r\n    const handleEditSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData(e.target);\r\n        const updatedItem = {};\r\n        formData.forEach((value, key) => {\r\n            if (value) updatedItem[key] = value; // Only update fields with a non-empty value\r\n        });\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/edit_asset/${editFormData._id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updatedItem),\r\n            });\r\n\r\n            if (response.ok) {\r\n                closeEditForm();\r\n                fetchData(); // Refresh data to show the updated item\r\n            } else {\r\n                console.error('Failed to update item');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating item:', error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/delete_asset/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            if (response.ok) {\r\n                const updatedData = data.filter(item => item._id !== id);\r\n                setData(updatedData);\r\n            } else {\r\n                console.error('Failed to delete item');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting item:', error);\r\n        }\r\n    };\r\n\r\n    const totalPages = Math.ceil(filteredData.length / itemsPerPage);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <TopNav /> {/* Add the TopNav component here */}\r\n            <div className=\"content gen-report-content\">\r\n                <div className=\"table-container\">\r\n                    <div className=\"items-per-page\">\r\n                        <label htmlFor=\"itemsPerPage\">Items per page:</label>\r\n                        <select id=\"itemsPerPage\" value={itemsPerPage} onChange={changeItemsPerPage}>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"20\">20</option>\r\n                            <option value=\"50\">50</option>\r\n                            <option value=\"100\">100</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"filter-container\">\r\n                        <label htmlFor=\"filterInput\">Filter:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"filterInput\"\r\n                            value={filter}\r\n                            onChange={(e) => setFilter(e.target.value)}\r\n                            placeholder=\"Search\"\r\n                        />\r\n                    </div>\r\n                    <table id=\"employeeTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                {data.length > 0 &&\r\n                                    Object.keys(data[0]).map(key => (\r\n                                        key !== '_id' && <th key={key}>{key}</th>\r\n                                    ))\r\n                                }\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {currentItems.map(item => (\r\n                                <tr key={item._id}>\r\n                                    {Object.keys(item).map(key => (\r\n                                        key !== '_id' && <td key={key}>{item[key]}</td>\r\n                                    ))}\r\n                                    <td>\r\n                                        <button className=\"edit-link\" onClick={() => openEditForm(item)}>Edit</button>\r\n                                        <button\r\n                                            className=\"delete-link\"\r\n                                            onClick={() => handleDelete(item._id)}\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"view-link\"\r\n                                            onClick={() => openModal(item._id)}\r\n                                        >\r\n                                            View\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"pagination\">\r\n                        <button id=\"prevPageBtn\" onClick={() => changePage(currentPage - 1)} disabled={currentPage === 1}>Previous Page</button>\r\n                        <span> Page {currentPage} of {totalPages} </span>\r\n                        <button id=\"nextPageBtn\" onClick={() => changePage(currentPage + 1)} disabled={currentPage === totalPages}>Next Page</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {selectedAsset && (\r\n                <div id=\"viewModal\" className=\"modal\" style={{ display: 'block' }} onClick={closeModal}>\r\n                    <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n                        <span className=\"close-button\" onClick={closeModal}>&times;</span>\r\n                        <h2>Asset Details</h2>\r\n                        <div id=\"assetDetails\" className=\"asset-details\">\r\n                            {Object.keys(selectedAsset).map(key => (\r\n                                key !== '_id' && <p key={key}><strong>{key}:</strong> {selectedAsset[key]}</p>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <div id=\"editDataForm\" className=\"modal\">\r\n                <div className=\"modal-content\">\r\n                    <span className=\"close\" onClick={closeEditForm}>&times;</span>\r\n                    <h2>Edit Data</h2>\r\n                    <form id=\"editForm\" onSubmit={handleEditSubmit}>\r\n                        {editFormData &&\r\n                            Object.keys(editFormData).map((key) => (\r\n                                key !== '_id' && (\r\n                                    <div key={key}>\r\n                                        <label htmlFor={key}>{key}:</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id={key}\r\n                                            name={key}\r\n                                            defaultValue={editFormData[key]}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            ))}\r\n                        <button type=\"submit\">Save</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Emplist;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}